import streamlit as st
import requests
 # Change this URL to the one of your API
API_URL = " https://my-api-app-ltqnoxdklq-ew.a.run.app/"

st.title("Belgian Real Estate Price Predictor")
st.write("Estimate the price of a property in Belgium by entering the info below: ")

bedrooms = st.slider('How many bedrooms?', min_value=0, max_value=8, value=1, step=1)

building_condition = st.selectbox("Building condition:",
    ('Good', 'As new', 'Just renovated', 'To renovate', 'To be done up',
       'To restore'))
construction_year =st.number_input('What is the construction year?',min_value=1850,max_value=2023,step=1)
#double_glazing =st.number_input("Double glazing: Please input one of the following conditions? 1: yes, 0:No",format="%0f"),

double_glazing =st.selectbox("Double glazing: 1: yes, 0: No",(1, 0)),


energy_class = st.selectbox("Energy Class:",('A++','A+','A','B',
                                                                              'C','D','E','F','G','Not specified', 'C_B')),

furnished =st.selectbox("Furnished: 1: yes, 0:No",(1, 0)),


surface_of_the_plot  =st.number_input('Total surface of plot in m2:',min_value=5,max_value=5000,step=1)

tenement_building =st.selectbox("Is the property part of a tenement building? 1: yes, 0: No",(1, 0)),

toilets = st.slider('How many Toilets?',  min_value=0, max_value=8, value=1, step=1)

city = st.selectbox("City: ",('Aalst',
 'Aalter',
 'Affligem',
 'Amay',
 'Andenne',
 'Anderlecht',
 'Ans',
 'Antwerpen',
 'Anzegem',
 'Arlon',
 'Asse',
 'Assenede',
 'Ath',
 'Aubange',
 'Auderghem',
 'Avelgem',
 'Awans',
 'Aywaille',
 'Bastogne',
 'Beauraing',
 'Berchem-Sainte-Agathe',
 'Bergen',
 'Bertrix',
 'Beveren',
 'Bierbeek',
 'Binche',
 'Blankenberge',
 'Boechout',
 'Bonheiden',
 'Borgloon',
 'Bornem',
 'Bouillon',
 'Boussu',
 "Braine-l'Alleud",
 'Braine-le-Château',
 'Braives',
 'Brasschaat',
 'Bredene',
 'Brugge',
 'Brussel',
 'Brussels',
 'Bruxelles',
 'Buggenhout',
 'Charleroi',
 'Chaudfontaine',
 'Chaumont-Gistoux',
 'Châtelet',
 'Ciney',
 'Court-St.-Étienne',
 'Damme',
 'De Haan',
 'Deerlijk',
 'Deinze',
 'Dendermonde',
 'Dessel',
 'Destelbergen',
 'Diepenbeek',
 'Diksmuide',
 'Dilbeek',
 'Dinant',
 'Dour',
 'Durbuy',
 'Eeklo',
 'Enghien',
 'Esneux',
 'Estaimpuis',
 'Etterbeek',
 'Evere',
 'Evergem',
 'Fleurus',
 'Flémalle',
 'Frameries',
 'Frasnes-lez-Anvaing',
 'Frasnes-lez-Gosselies',
 'Galmaarden',
 'Ganshoren',
 'Gavere',
 'Geel',
 'Gembloux',
 'Genappe',
 'Gent',
 'Geraardsbergen',
 'Gerpinnes',
 'Gooik',
 'Grez-Doiceau',
 'Grimbergen',
 'Haacht',
 'Halle',
 'Ham-sur-Heure-Nalinnes',
 'Hamme',
 'Hannut',
 'Harelbeke',
 'Hasselt',
 'Hechtel-Eksel',
 'Heist-op-den-Berg',
 'Herent',
 'Herentals',
 'Herne',
 'Herstal',
 'Herzele',
 'Hoegaarden',
 'Hoeilaart',
 'Honnelles',
 'Hotton',
 'Huy',
 'Ieper',
 'Incourt',
 'Ingelmunster',
 'Ixelles',
 'Izegem',
 'Jabbeke',
 'Jette',
 'Kapelle-op-den-Bos',
 'Keerbergen',
 'Knokke-Heist',
 'Koekelberg',
 'Koerich',
 'Kortemark',
 'Kortrijk',
 'Kraainem',
 'La Hulpe',
 'La Louvière',
 'Lasne',
 'Lebbeke',
 'Lede',
 'Leeuw-Saint-Pierre',
 'Lendelede',
 'Lessines',
 'Leuven',
 'Libin',
 'Libramont-Chevigny',
 'Liedekerke',
 'Lier',
 'Lievegem',
 'Linkebeek',
 'Liège',
 'Lobbes',
 'Lochristi',
 'Lokeren',
 'Londerzeel',
 'Machelen',
 'Maldegem',
 'Manage',
 'Marche-en-Famenne',
 'Mechelen',
 'Meise',
 'Melle',
 'Merelbeke',
 'Messancy',
 'Middelkerke',
 'Mons',
 'Mont-Saint-Guibert',
 'Morlanwelz',
 'Mouscron',
 'Namur',
 'Nandrin',
 'Neufchâteau',
 'Neupré',
 'Nieuwpoort',
 'Ninove',
 'Nivelles',
 'Oostende',
 'Oosterzele',
 'Oostkamp',
 'Opwijk',
 'Orp-Jauche',
 'Ottignies-Louvain-la-Neuve',
 'Oud-Heverlee',
 'Oudenaarde',
 'Oupeye',
 'Overijse',
 'Paliseul',
 'Pepinster',
 'Pittem',
 'Pont-à-Celles',
 'Poperinge',
 'Profondeville',
 'Putte',
 'Puurs-Sint-Amands',
 'Rebecq',
 'Rijkevorsel',
 'Rixensart',
 'Rochefort',
 'Roeselare',
 'Ronse',
 'Saint-Ghislain',
 'Saint-Gilles',
 'Saint-Léger',
 'Sambreville',
 'Schaerbeek',
 'Schilde',
 'Schoten',
 'Seneffe',
 'Seraing',
 'Silly',
 'Sint-Genesius-Rode',
 'Sint-Gillis-Waas',
 'Sint-Laureins',
 'Sint-Martens-Latem',
 'Sint-Niklaas',
 'Sint-Pieters-Leeuw',
 'Sint-Truiden',
 'Sombreffe',
 'Somme-Leuze',
 'Spa',
 'Sprimont',
 'Stabroek',
 'Steenokkerzeel',
 'Stekene',
 'Temse',
 'Ternat',
 'Tessenderlo',
 'Tielt',
 'Tielt-Winge',
 'Tienen',
 'Torhout',
 'Tournai',
 'Trooz',
 'Tubize',
 'Uccle',
 'Verviers',
 'Vielsalm',
 'Vilvoorde',
 'Virton',
 'Wanze',
 'Waregem',
 'Waterloo',
 'Watermael-Boitsfort',
 'Wavre',
 'Wellin',
 'Wemmel',
 'Wetteren',
 'Wevelgem',
 'Wezembeek-Oppem',
 'Wijnegem',
 'Willebroek',
 'Wingene',
 'Woluwe-Saint-Pierre',
 'Woluwe-St.-Lambert',
 'Zaventem',
 'Zedelgem',
 'Zelzate',
 'Zemst',
 'Zonhoven',
 'Zottegem',
 'nan',
 'Écaussinnes'))

url = f"{API_URL}/predict"
params = {
    'bedrooms': bedrooms,
    'building_condition': building_condition,
    'construction_year': construction_year,
    'double_glazing':double_glazing,
    'energy_class':energy_class,
    'furnished':furnished,
    'surface_of_the_plot': surface_of_the_plot,
    'tenement_building': tenement_building,
    'toilets':toilets,
    'city':city
}
response = requests.get(url, params=params).json()

r = response['prediction']

formatted_r = str("{:,.0f}".format(r))

if st.button('Calculate Price'):

    st.markdown(f"### The estimated price is  {formatted_r} Euro.")
